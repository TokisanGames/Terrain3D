:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/../_plugins/Terrain3D/doc/classes/Terrain3D.xml.

.. _class_Terrain3D:

Terrain3D
=========

**Inherits:** :ref:`Node3D<class_Node3D>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

.. rst-class:: classref-introduction-group

Description
-----------

Terrain3D is a high performance, editable terrain system for Godot 4. It provides a clipmap based terrain that supports up to 16k terrains with multiple LODs, 32 textures, and editor tools for importing or creating terrains.

This class handles mesh and collision generation, and management of the whole system. See `System Architecture <../docs/system_architecture.html>`__ for design details.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`bool<class_bool>`                                                   | :ref:`collision_enabled<class_Terrain3D_property_collision_enabled>`       | ``true``        |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`int<class_int>`                                                     | :ref:`collision_layer<class_Terrain3D_property_collision_layer>`           | ``1``           |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`int<class_int>`                                                     | :ref:`collision_mask<class_Terrain3D_property_collision_mask>`             | ``1``           |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`float<class_float>`                                                 | :ref:`collision_priority<class_Terrain3D_property_collision_priority>`     | ``1.0``         |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`int<class_int>`                                                     | :ref:`debug_level<class_Terrain3D_property_debug_level>`                   | ``0``           |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`bool<class_bool>`                                                   | :ref:`debug_show_collision<class_Terrain3D_property_debug_show_collision>` | ``false``       |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`Terrain3DMaterial<class_Terrain3DMaterial>`                         | :ref:`material<class_Terrain3D_property_material>`                         |                 |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`int<class_int>`                                                     | :ref:`mesh_lods<class_Terrain3D_property_mesh_lods>`                       | ``7``           |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`int<class_int>`                                                     | :ref:`mesh_size<class_Terrain3D_property_mesh_size>`                       | ``48``          |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`float<class_float>`                                                 | :ref:`mesh_vertex_spacing<class_Terrain3D_property_mesh_vertex_spacing>`   | ``1.0``         |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`ShadowCastingSetting<enum_GeometryInstance3D_ShadowCastingSetting>` | :ref:`render_cast_shadows<class_Terrain3D_property_render_cast_shadows>`   | ``1``           |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`float<class_float>`                                                 | :ref:`render_cull_margin<class_Terrain3D_property_render_cull_margin>`     | ``0.0``         |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`int<class_int>`                                                     | :ref:`render_layers<class_Terrain3D_property_render_layers>`               | ``2147483649``  |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`int<class_int>`                                                     | :ref:`render_mouse_layer<class_Terrain3D_property_render_mouse_layer>`     | ``32``          |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`Terrain3DStorage<class_Terrain3DStorage>`                           | :ref:`storage<class_Terrain3D_property_storage>`                           |                 |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`Terrain3DTextureList<class_Terrain3DTextureList>`                   | :ref:`texture_list<class_Terrain3D_property_texture_list>`                 |                 |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+
   | :ref:`String<class_String>`                                               | :ref:`version<class_Terrain3D_property_version>`                           | ``"0.9.1-dev"`` |
   +---------------------------------------------------------------------------+----------------------------------------------------------------------------+-----------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Mesh<class_Mesh>`                             | :ref:`bake_mesh<class_Terrain3D_method_bake_mesh>` **(** :ref:`int<class_int>` lod, :ref:`HeightFilter<enum_Terrain3DStorage_HeightFilter>` filter **)**                                                                                     |
   +-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`PackedVector3Array<class_PackedVector3Array>` | :ref:`generate_nav_mesh_source_geometry<class_Terrain3D_method_generate_nav_mesh_source_geometry>` **(** :ref:`AABB<class_AABB>` global_aabb, :ref:`bool<class_bool>` require_nav=true **)**                                                 |
   +-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Camera3D<class_Camera3D>`                     | :ref:`get_camera<class_Terrain3D_method_get_camera>` **(** **)**                                                                                                                                                                             |
   +-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Image<class_Image>`                           | :ref:`get_filled_image<class_Terrain3D_method_get_filled_image>` **(** :ref:`Vector2i<class_Vector2i>` size, :ref:`Color<class_Color>` color, :ref:`bool<class_bool>` create_mipmaps, :ref:`Format<enum_Image_Format>` format **)** |static| |
   +-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>`                       | :ref:`get_intersection<class_Terrain3D_method_get_intersection>` **(** :ref:`Vector3<class_Vector3>` src_pos, :ref:`Vector3<class_Vector3>` direction **)**                                                                                  |
   +-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>`                       | :ref:`get_min_max<class_Terrain3D_method_get_min_max>` **(** :ref:`Image<class_Image>` image **)** |static|                                                                                                                                  |
   +-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`EditorPlugin<class_EditorPlugin>`             | :ref:`get_plugin<class_Terrain3D_method_get_plugin>` **(** **)**                                                                                                                                                                             |
   +-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Image<class_Image>`                           | :ref:`get_thumbnail<class_Terrain3D_method_get_thumbnail>` **(** :ref:`Image<class_Image>` image, :ref:`Vector2i<class_Vector2i>` size=Vector2i(256, 256) **)** |static|                                                                     |
   +-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Image<class_Image>`                           | :ref:`pack_image<class_Terrain3D_method_pack_image>` **(** :ref:`Image<class_Image>` src_rgb, :ref:`Image<class_Image>` src_r, :ref:`bool<class_bool>` invert_green_channel=false **)** |static|                                             |
   +-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`set_camera<class_Terrain3D_method_set_camera>` **(** :ref:`Camera3D<class_Camera3D>` camera **)**                                                                                                                                      |
   +-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`set_plugin<class_Terrain3D_method_set_plugin>` **(** :ref:`EditorPlugin<class_EditorPlugin>` plugin **)**                                                                                                                              |
   +-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`update_aabbs<class_Terrain3D_method_update_aabbs>` **(** **)**                                                                                                                                                                         |
   +-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_Terrain3D_signal_material_changed:

.. rst-class:: classref-signal

**material_changed** **(** **)**

Emitted when :ref:`material<class_Terrain3D_property_material>` is changed.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_signal_storage_changed:

.. rst-class:: classref-signal

**storage_changed** **(** **)**

Emitted when :ref:`storage<class_Terrain3D_property_storage>` is changed.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_signal_texture_list_changed:

.. rst-class:: classref-signal

**texture_list_changed** **(** **)**

Emitted when :ref:`texture_list<class_Terrain3D_property_texture_list>` is changed.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_Terrain3D_property_collision_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **collision_enabled** = ``true``

.. rst-class:: classref-property-setget

- void **set_collision_enabled** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_collision_enabled** **(** **)**

If enabled, collision is generated according to the mode selected. By default collision is generated for all regions at run time only using the physics server. Also see :ref:`debug_show_collision<class_Terrain3D_property_debug_show_collision>`.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_collision_layer:

.. rst-class:: classref-property

:ref:`int<class_int>` **collision_layer** = ``1``

.. rst-class:: classref-property-setget

- void **set_collision_layer** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_collision_layer** **(** **)**

The physics layers the terrain lives in. Also see :ref:`collision_mask<class_Terrain3D_property_collision_mask>`.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_collision_mask:

.. rst-class:: classref-property

:ref:`int<class_int>` **collision_mask** = ``1``

.. rst-class:: classref-property-setget

- void **set_collision_mask** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_collision_mask** **(** **)**

The physics layers the terrain scans for colliding objects. Also see :ref:`collision_layer<class_Terrain3D_property_collision_layer>`.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_collision_priority:

.. rst-class:: classref-property

:ref:`float<class_float>` **collision_priority** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_collision_priority** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_collision_priority** **(** **)**

The priority used to solve collisions. The higher priority, the lower the penetration of a colliding object.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_debug_level:

.. rst-class:: classref-property

:ref:`int<class_int>` **debug_level** = ``0``

.. rst-class:: classref-property-setget

- void **set_debug_level** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_debug_level** **(** **)**

The verbosity of debug messages printed to the console. Errors and warnings are always printed. This can also be set via command line using ``--terrain3d-debug=LEVEL`` where ``LEVEL`` is one of ``ERROR, INFO, DEBUG, DEBUG_CONT``. The last is for continuously recurring messages like position updates for the mesh as the camera moves around.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_debug_show_collision:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **debug_show_collision** = ``false``

.. rst-class:: classref-property-setget

- void **set_show_debug_collision** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_show_debug_collision** **(** **)**

If collision is enabled, this generates collision in the editor and in game. It can be visible in the editor by enabling ``View Gizmos`` in the viewport menu.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_material:

.. rst-class:: classref-property

:ref:`Terrain3DMaterial<class_Terrain3DMaterial>` **material**

.. rst-class:: classref-property-setget

- void **set_material** **(** :ref:`Terrain3DMaterial<class_Terrain3DMaterial>` value **)**
- :ref:`Terrain3DMaterial<class_Terrain3DMaterial>` **get_material** **(** **)**

A custom material for Terrain3D. You can optionally save this as an external ``.tres`` text file if you wish to share it with instances of Terrain3D in other scenes. See :ref:`Terrain3DMaterial<class_Terrain3DMaterial>`.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_mesh_lods:

.. rst-class:: classref-property

:ref:`int<class_int>` **mesh_lods** = ``7``

.. rst-class:: classref-property-setget

- void **set_mesh_lods** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_mesh_lods** **(** **)**

The number of lods generated in the mesh. Enable wireframe mode in the viewport to see them.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_mesh_size:

.. rst-class:: classref-property

:ref:`int<class_int>` **mesh_size** = ``48``

.. rst-class:: classref-property-setget

- void **set_mesh_size** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_mesh_size** **(** **)**

The correlated size of the terrain meshes. Lod0 has ``4*mesh_size + 2`` quads per side. E.g. when mesh_size=8, lod0 has 34 quads to a side, including 2 quads for seams.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_mesh_vertex_spacing:

.. rst-class:: classref-property

:ref:`float<class_float>` **mesh_vertex_spacing** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_mesh_vertex_spacing** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_mesh_vertex_spacing** **(** **)**

The distance between vertices. Godot units are typically considered to be meters. This scales the terrain on X and Z axes.

This variable changes the global position of landscape features. A mountain peak might be at (512, 512), but with a vertex spacing of 2.0 it is now located at (1024, 1024).

All Terrain3D functions with a global_position expect an absolute global value. If you would normally use :ref:`Terrain3DStorage.import_images<class_Terrain3DStorage_method_import_images>` to import an image in the region at (-1024, -1024), with a mesh_vertex_spacing of 2, you'll need to import that image at (-2048, -2048) to place it in the same region.

To scale heights, export the height map and reimport it with a new height scale.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_render_cast_shadows:

.. rst-class:: classref-property

:ref:`ShadowCastingSetting<enum_GeometryInstance3D_ShadowCastingSetting>` **render_cast_shadows** = ``1``

.. rst-class:: classref-property-setget

- void **set_cast_shadows** **(** :ref:`ShadowCastingSetting<enum_GeometryInstance3D_ShadowCastingSetting>` value **)**
- :ref:`ShadowCastingSetting<enum_GeometryInstance3D_ShadowCastingSetting>` **get_cast_shadows** **(** **)**

Tells the renderer how to cast shadows from the terrain onto other objects. This sets ``GeometryInstance3D.ShadowCastingSetting`` in the engine.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_render_cull_margin:

.. rst-class:: classref-property

:ref:`float<class_float>` **render_cull_margin** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_cull_margin** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_cull_margin** **(** **)**

This margin is added to the terrain bounding box (AABB). The terrain already sets its AABB, so this setting only needs to be used if the shader has expanded the terrain beyond the AABB and the terrain meshes are being culled, as might happen from using :ref:`Terrain3DMaterial.world_background<class_Terrain3DMaterial_property_world_background>` with NOISE and a large height value. This sets ``GeometryInstance3D.extra_cull_margin`` in the engine.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_render_layers:

.. rst-class:: classref-property

:ref:`int<class_int>` **render_layers** = ``2147483649``

.. rst-class:: classref-property-setget

- void **set_render_layers** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_render_layers** **(** **)**

The render layers the terrain is drawn on. This sets ``VisualInstance3D.layers`` in the engine. The defaults is layer 1 and 32 (for the mouse cursor). When you set this, make sure the layer for :ref:`render_mouse_layer<class_Terrain3D_property_render_mouse_layer>` is included, or set that variable again after this so that the mouse cursor works.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_render_mouse_layer:

.. rst-class:: classref-property

:ref:`int<class_int>` **render_mouse_layer** = ``32``

.. rst-class:: classref-property-setget

- void **set_mouse_layer** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_mouse_layer** **(** **)**

Godot supports 32 render layers. For most objects, only layers 1-20 are available for selection in the inspector. 21-32 are settable via code, and are considered reserved for editor plugins.

This variable sets the editor render layer (21-32) to be used by ``get_intersection``, which the mouse cursor uses.

You may place other objects on this layer, however ``get_intersection`` will report intersections with them. So either dedicate this layer to Terrain3D, or if you must use all 32 layers, dedicate this one during editing or when using ``get_intersection``, and then you can use it during game play.

See :ref:`get_intersection<class_Terrain3D_method_get_intersection>`.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_storage:

.. rst-class:: classref-property

:ref:`Terrain3DStorage<class_Terrain3DStorage>` **storage**

.. rst-class:: classref-property-setget

- void **set_storage** **(** :ref:`Terrain3DStorage<class_Terrain3DStorage>` value **)**
- :ref:`Terrain3DStorage<class_Terrain3DStorage>` **get_storage** **(** **)**

The object that houses all Terrain3D region, height, control, and color maps. Make sure to save this as an external ``.res`` binary file.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_texture_list:

.. rst-class:: classref-property

:ref:`Terrain3DTextureList<class_Terrain3DTextureList>` **texture_list**

.. rst-class:: classref-property-setget

- void **set_texture_list** **(** :ref:`Terrain3DTextureList<class_Terrain3DTextureList>` value **)**
- :ref:`Terrain3DTextureList<class_Terrain3DTextureList>` **get_texture_list** **(** **)**

The list of texture files used by Terrain3D. You can optionally save this as an external ``.tres`` text file if you wish to share it with instances of Terrain3D in other scenes.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_property_version:

.. rst-class:: classref-property

:ref:`String<class_String>` **version** = ``"0.9.1-dev"``

.. rst-class:: classref-property-setget

- :ref:`String<class_String>` **get_version** **(** **)**

The current version of Terrain3D.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_Terrain3D_method_bake_mesh:

.. rst-class:: classref-method

:ref:`Mesh<class_Mesh>` **bake_mesh** **(** :ref:`int<class_int>` lod, :ref:`HeightFilter<enum_Terrain3DStorage_HeightFilter>` filter **)**

Generates a static ArrayMesh for the terrain.

\ ``lod`` - Determines the granularity of the generated mesh. The range is 0-8. 4 is recommended.

\ ``filter`` - Controls how vertex Y coordinates are generated from the height map. See :ref:`HeightFilter<enum_Terrain3DStorage_HeightFilter>`.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_method_generate_nav_mesh_source_geometry:

.. rst-class:: classref-method

:ref:`PackedVector3Array<class_PackedVector3Array>` **generate_nav_mesh_source_geometry** **(** :ref:`AABB<class_AABB>` global_aabb, :ref:`bool<class_bool>` require_nav=true **)**

Generates source geometry faces for input to nav mesh baking. Geometry is only generated where there are no holes and the terrain has been painted as navigable.

\ ``global_aabb`` - If non-empty, geometry will be generated only within this AABB. If empty, geometry will be generated for the entire terrain.

\ ``require_nav`` - If true, this function will only generate geometry for terrain marked navigable. Otherwise, geometry is generated for the entire terrain within the AABB (which can be useful for dynamic and/or runtime nav mesh baking).

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_method_get_camera:

.. rst-class:: classref-method

:ref:`Camera3D<class_Camera3D>` **get_camera** **(** **)**

Returns the camera the terrain is currently snapping to.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_method_get_filled_image:

.. rst-class:: classref-method

:ref:`Image<class_Image>` **get_filled_image** **(** :ref:`Vector2i<class_Vector2i>` size, :ref:`Color<class_Color>` color, :ref:`bool<class_bool>` create_mipmaps, :ref:`Format<enum_Image_Format>` format **)** |static|

A utility function that returns an Image filled with a specified color and format.

If ``color.a < 0``, its filled with a checkered pattern multiplied by ``color.rgb``.

The behavior changes if a compressed format is requested:

- If the editor is running and the format is DXT1, DXT5, or BPTC_RGBA, it returns a filled image in the requested color and format.

- All other compressed formats return a blank image in that format.

The reason for this is the Image compression library is available only in the editor. And it is unreliable, offering little control over the output format, choosing automatically and often wrong. We have selected a few compressed formats it gets right.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_method_get_intersection:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **get_intersection** **(** :ref:`Vector3<class_Vector3>` src_pos, :ref:`Vector3<class_Vector3>` direction **)**

Casts a ray from ``src_pos`` pointing towards ``direction``, attempting to intersect the terrain.

Possible return values:

- If the terrain is hit, the intersection point is returned.

- If there is no intersection, eg. the ray points towards the sky, it returns the maximum double float value ``Vector3(3.402823466e+38F,...)``. You can check this case with this code: ``if point.z > 3.4e38:``\ 

- On error, it returns ``Vector3(NAN, NAN, NAN)`` and prints a message to the console.

This ray cast does not use physics, so enabling collision is unnecessary. It places a camera at the specified point and "looks" at the terrain. It then uses the renderer's depth texture to determine how far away the intersection point is.

This function is used by the editor plugin to place the mouse cursor. It can also be used by 3rd party plugins, and even during gameplay, such as a space ship firing lasers at the terrain and causing an explosion at the hit point.

It does require the use of an editor render layer (21-32) that should be dedicated while using this function. See :ref:`render_mouse_layer<class_Terrain3D_property_render_mouse_layer>`.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_method_get_min_max:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **get_min_max** **(** :ref:`Image<class_Image>` image **)** |static|

A utility function that returns the minimum and maximum r channel values of an Image. Used for heightmaps.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_method_get_plugin:

.. rst-class:: classref-method

:ref:`EditorPlugin<class_EditorPlugin>` **get_plugin** **(** **)**

Returns the EditorPlugin connected to Terrain3D.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_method_get_thumbnail:

.. rst-class:: classref-method

:ref:`Image<class_Image>` **get_thumbnail** **(** :ref:`Image<class_Image>` image, :ref:`Vector2i<class_Vector2i>` size=Vector2i(256, 256) **)** |static|

A utility function that returns an Image normalized and converted to RGB8. Used for creating a human viewable thumbnail of a heightmap.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_method_pack_image:

.. rst-class:: classref-method

:ref:`Image<class_Image>` **pack_image** **(** :ref:`Image<class_Image>` src_rgb, :ref:`Image<class_Image>` src_r, :ref:`bool<class_bool>` invert_green_channel=false **)** |static|

A utility function that returns an Image with the following content:

- RGB channels from ``src_rgb``.

- A channel from ``src_r``.

- G inverted, if specified (eg for converting normal maps between DirectX and OpenGL).

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_method_set_camera:

.. rst-class:: classref-method

void **set_camera** **(** :ref:`Camera3D<class_Camera3D>` camera **)**

Sets the camera the terrain snaps to.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_method_set_plugin:

.. rst-class:: classref-method

void **set_plugin** **(** :ref:`EditorPlugin<class_EditorPlugin>` plugin **)**

Sets the EditorPlugin connected to Terrain3D.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3D_method_update_aabbs:

.. rst-class:: classref-method

void **update_aabbs** **(** **)**

Sets the bounding boxes (AABBs) for the terrain meshes so they won't be culled. Also see :ref:`render_cull_margin<class_Terrain3D_property_render_cull_margin>`.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
