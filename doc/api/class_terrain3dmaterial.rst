:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/../_plugins/Terrain3D/doc/doc_classes/Terrain3DMaterial.xml.

.. _class_Terrain3DMaterial:

Terrain3DMaterial
=================

**Inherits:** ``Resource``

A custom shader material resource for Terrain3D.

.. rst-class:: classref-introduction-group

Description
-----------

This class handles options for both the built-in shader and any custom override shader. It collects compiled texture data from the other classes and sends all of it to the shader via the RenderingServer.

It is a savable resource, so you can save it to disk and use the same material settings in multiple scenes that use Terrain3D. The amount of data is small, assuming you have saved your shader parameter textures to disk, so it can be saved as a git-friendly, text based .tres file or left within the scene file.

While it does mimic some of the functionality of ShaderMaterial, it does not derive from any of the Godot Material classes. It will not pass any ``is Material`` checks. It is a ``Resource``.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``Dictionary``                                                   | :ref:`_shader_parameters<class_Terrain3DMaterial_property__shader_parameters>`           | ``{}``    |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`auto_shader<class_Terrain3DMaterial_property_auto_shader>`                         | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`dual_scaling<class_Terrain3DMaterial_property_dual_scaling>`                       | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``Shader``                                                       | :ref:`shader_override<class_Terrain3DMaterial_property_shader_override>`                 |           |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`shader_override_enabled<class_Terrain3DMaterial_property_shader_override_enabled>` | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_autoshader<class_Terrain3DMaterial_property_show_autoshader>`                 | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_checkered<class_Terrain3DMaterial_property_show_checkered>`                   | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_colormap<class_Terrain3DMaterial_property_show_colormap>`                     | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_contours<class_Terrain3DMaterial_property_show_contours>`                     | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_control_angle<class_Terrain3DMaterial_property_show_control_angle>`           | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_control_blend<class_Terrain3DMaterial_property_show_control_blend>`           | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_control_scale<class_Terrain3DMaterial_property_show_control_scale>`           | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_control_texture<class_Terrain3DMaterial_property_show_control_texture>`       | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_grey<class_Terrain3DMaterial_property_show_grey>`                             | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_heightmap<class_Terrain3DMaterial_property_show_heightmap>`                   | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_instancer_grid<class_Terrain3DMaterial_property_show_instancer_grid>`         | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_navigation<class_Terrain3DMaterial_property_show_navigation>`                 | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_region_grid<class_Terrain3DMaterial_property_show_region_grid>`               | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_roughmap<class_Terrain3DMaterial_property_show_roughmap>`                     | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_texture_height<class_Terrain3DMaterial_property_show_texture_height>`         | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_texture_normal<class_Terrain3DMaterial_property_show_texture_normal>`         | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_texture_rough<class_Terrain3DMaterial_property_show_texture_rough>`           | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | ``bool``                                                         | :ref:`show_vertex_grid<class_Terrain3DMaterial_property_show_vertex_grid>`               | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`TextureFiltering<enum_Terrain3DMaterial_TextureFiltering>` | :ref:`texture_filtering<class_Terrain3DMaterial_property_texture_filtering>`             | ``0``     |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>`   | :ref:`world_background<class_Terrain3DMaterial_property_world_background>`               | ``1``     |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-------------+----------------------------------------------------------------------------------------------------------------------------+
   | ``RID``     | :ref:`get_material_rid<class_Terrain3DMaterial_method_get_material_rid>`\ (\ ) |const|                                     |
   +-------------+----------------------------------------------------------------------------------------------------------------------------+
   | ``Variant`` | :ref:`get_shader_param<class_Terrain3DMaterial_method_get_shader_param>`\ (\ name\: ``StringName``\ ) |const|              |
   +-------------+----------------------------------------------------------------------------------------------------------------------------+
   | ``RID``     | :ref:`get_shader_rid<class_Terrain3DMaterial_method_get_shader_rid>`\ (\ ) |const|                                         |
   +-------------+----------------------------------------------------------------------------------------------------------------------------+
   | Error       | :ref:`save<class_Terrain3DMaterial_method_save>`\ (\ path\: ``String`` = ""\ )                                             |
   +-------------+----------------------------------------------------------------------------------------------------------------------------+
   | |void|      | :ref:`set_shader_param<class_Terrain3DMaterial_method_set_shader_param>`\ (\ name\: ``StringName``, value\: ``Variant``\ ) |
   +-------------+----------------------------------------------------------------------------------------------------------------------------+
   | |void|      | :ref:`update<class_Terrain3DMaterial_method_update>`\ (\ )                                                                 |
   +-------------+----------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_Terrain3DMaterial_WorldBackground:

.. rst-class:: classref-enumeration

enum **WorldBackground**: :ref:`🔗<enum_Terrain3DMaterial_WorldBackground>`

.. _class_Terrain3DMaterial_constant_NONE:

.. rst-class:: classref-enumeration-constant

:ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>` **NONE** = ``0``

Outside of the defined regions, hide the mesh.

.. _class_Terrain3DMaterial_constant_FLAT:

.. rst-class:: classref-enumeration-constant

:ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>` **FLAT** = ``1``

Outside of the defined regions, show a flat terrain.

.. _class_Terrain3DMaterial_constant_NOISE:

.. rst-class:: classref-enumeration-constant

:ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>` **NOISE** = ``2``

Outside of the defined regions, generate visual-only hills.

.. rst-class:: classref-item-separator

----

.. _enum_Terrain3DMaterial_TextureFiltering:

.. rst-class:: classref-enumeration

enum **TextureFiltering**: :ref:`🔗<enum_Terrain3DMaterial_TextureFiltering>`

.. _class_Terrain3DMaterial_constant_LINEAR:

.. rst-class:: classref-enumeration-constant

:ref:`TextureFiltering<enum_Terrain3DMaterial_TextureFiltering>` **LINEAR** = ``0``

Textures are filtered using a blend of 4 adjacent pixels. Use this for most cases for high quality renders.

.. _class_Terrain3DMaterial_constant_NEAREST:

.. rst-class:: classref-enumeration-constant

:ref:`TextureFiltering<enum_Terrain3DMaterial_TextureFiltering>` **NEAREST** = ``1``

Textures are filtered using a the nearest pixel only. It is faster than LINEAR, but the texture will look pixelated. Use this for a low-poly look, with a very low uv_scale.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_Terrain3DMaterial_property__shader_parameters:

.. rst-class:: classref-property

``Dictionary`` **_shader_parameters** = ``{}`` :ref:`🔗<class_Terrain3DMaterial_property__shader_parameters>`

This private dictionary stores all of the shader parameters in the resource. It is not a cache.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_auto_shader:

.. rst-class:: classref-property

``bool`` **auto_shader** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_auto_shader>`

.. rst-class:: classref-property-setget

- |void| **set_auto_shader**\ (\ value\: ``bool``\ )
- ``bool`` **get_auto_shader**\ (\ )

Enables selecting two texture IDs that will automatically be applied to the terrain based upon slope.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_dual_scaling:

.. rst-class:: classref-property

``bool`` **dual_scaling** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_dual_scaling>`

.. rst-class:: classref-property-setget

- |void| **set_dual_scaling**\ (\ value\: ``bool``\ )
- ``bool`` **get_dual_scaling**\ (\ )

Enables selecting one texture ID that will have multiple scales applied based upon camera distance. Use it for something like a rock texture so up close it will be nicely detailed, and far away mountains can be covered in the same rock texture. The two blend together at a specified distance.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_shader_override:

.. rst-class:: classref-property

``Shader`` **shader_override** :ref:`🔗<class_Terrain3DMaterial_property_shader_override>`

.. rst-class:: classref-property-setget

- |void| **set_shader_override**\ (\ value\: ``Shader``\ )
- ``Shader`` **get_shader_override**\ (\ )

If shader_override_enabled is true and this Shader is valid, the material will use this custom shader code. If this is blank when you enable the override, the system will generate a shader with the current settings. So if you have a debug view enabled, the generated shader will have all of that code. A visual shader will also work here. However we only generate a text based shader so currently a visual shader needs to be constructed with the base code before it can work.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_shader_override_enabled:

.. rst-class:: classref-property

``bool`` **shader_override_enabled** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_shader_override_enabled>`

.. rst-class:: classref-property-setget

- |void| **enable_shader_override**\ (\ value\: ``bool``\ )
- ``bool`` **is_shader_override_enabled**\ (\ )

Enables use of the :ref:`shader_override<class_Terrain3DMaterial_property_shader_override>` shader code. Generates default code if shader_override is blank.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_autoshader:

.. rst-class:: classref-property

``bool`` **show_autoshader** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_autoshader>`

.. rst-class:: classref-property-setget

- |void| **set_show_autoshader**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_autoshader**\ (\ )

Display the area designated for use by the autoshader, which shows materials based upon slope.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_checkered:

.. rst-class:: classref-property

``bool`` **show_checkered** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_checkered>`

.. rst-class:: classref-property-setget

- |void| **set_show_checkered**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_checkered**\ (\ )

Shows a checkerboard display using a shader rendered pattern. This is turned on if the Texture List is empty.

Note that when a blank texture slot is created, a 1k checkerboard texture is generated and stored in the texture slot. That takes VRAM. The two patterns have a slightly different scale.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_colormap:

.. rst-class:: classref-property

``bool`` **show_colormap** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_colormap>`

.. rst-class:: classref-property-setget

- |void| **set_show_colormap**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_colormap**\ (\ )

Places the color map in the albedo channel.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_contours:

.. rst-class:: classref-property

``bool`` **show_contours** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_contours>`

.. rst-class:: classref-property-setget

- |void| **set_show_contours**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_contours**\ (\ )

Overlays contour lines on the terrain. Customize the options in the material when enabled. Press `4` with the mouse in the viewport to toggle.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_control_angle:

.. rst-class:: classref-property

``bool`` **show_control_angle** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_control_angle>`

.. rst-class:: classref-property-setget

- |void| **set_show_control_angle**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_control_angle**\ (\ )

Albedo shows the painted angle. Orange means 0°, Yellow 270°, Cyan 180°, Violet 90°. Or warm colors towards -Z, cool colors +Z, greens/yellows +X, reds/blues -X. Draw all angles coming from the center of a circle for a better understanding.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_control_blend:

.. rst-class:: classref-property

``bool`` **show_control_blend** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_control_blend>`

.. rst-class:: classref-property-setget

- |void| **set_show_control_blend**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_control_blend**\ (\ )

Albedo shows the blend value used to blend the base and overlay textures as greyscale. This is especially helpful to see how the noise texture adjusts the blending edges.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_control_scale:

.. rst-class:: classref-property

``bool`` **show_control_scale** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_control_scale>`

.. rst-class:: classref-property-setget

- |void| **set_show_control_scale**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_control_scale**\ (\ )

Albedo shows the painted scale. Larger scales are more red, smaller scales are more blue. 0.5 middle grey is the default 100% scale.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_control_texture:

.. rst-class:: classref-property

``bool`` **show_control_texture** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_control_texture>`

.. rst-class:: classref-property-setget

- |void| **set_show_control_texture**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_control_texture**\ (\ )

Albedo shows the base and overlay texture indices defined by the control map. Red pixels indicate the base texture, with brightness showing texture ids 0 to 31. Green pixels indicate the overlay texture. Yellow indicates both.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_grey:

.. rst-class:: classref-property

``bool`` **show_grey** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_grey>`

.. rst-class:: classref-property-setget

- |void| **set_show_grey**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_grey**\ (\ )

Albedo is set to 0.2 grey.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_heightmap:

.. rst-class:: classref-property

``bool`` **show_heightmap** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_heightmap>`

.. rst-class:: classref-property-setget

- |void| **set_show_heightmap**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_heightmap**\ (\ )

Albedo is a white to black gradient depending on height. The gradient is scaled to a height of 300, so above that or far below 0 will be all white or black.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_instancer_grid:

.. rst-class:: classref-property

``bool`` **show_instancer_grid** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_instancer_grid>`

.. rst-class:: classref-property-setget

- |void| **set_show_instancer_grid**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_instancer_grid**\ (\ )

Overlays the 32x32m instancer grid on the terrain, which shows how the instancer data is partitioned. Press `2` with the mouse in the viewport to toggle.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_navigation:

.. rst-class:: classref-property

``bool`` **show_navigation** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_navigation>`

.. rst-class:: classref-property-setget

- |void| **set_show_navigation**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_navigation**\ (\ )

Displays the area designated for generating the navigation mesh.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_region_grid:

.. rst-class:: classref-property

``bool`` **show_region_grid** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_region_grid>`

.. rst-class:: classref-property-setget

- |void| **set_show_region_grid**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_region_grid**\ (\ )

Overlays the region grid on the terrain. This is more accurate than the region grid gizmo for determining where the region border is when editing. Press `1` with the mouse in the viewport to toggle.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_roughmap:

.. rst-class:: classref-property

``bool`` **show_roughmap** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_roughmap>`

.. rst-class:: classref-property-setget

- |void| **set_show_roughmap**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_roughmap**\ (\ )

Albedo is set to the roughness modification map as grey scale. Middle grey, 0.5 means no roughness modification. Black would be high gloss while white is very rough.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_texture_height:

.. rst-class:: classref-property

``bool`` **show_texture_height** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_texture_height>`

.. rst-class:: classref-property-setget

- |void| **set_show_texture_height**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_texture_height**\ (\ )

Albedo is set to the painted Height textures.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_texture_normal:

.. rst-class:: classref-property

``bool`` **show_texture_normal** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_texture_normal>`

.. rst-class:: classref-property-setget

- |void| **set_show_texture_normal**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_texture_normal**\ (\ )

Albedo is set to the painted Normal textures.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_texture_rough:

.. rst-class:: classref-property

``bool`` **show_texture_rough** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_texture_rough>`

.. rst-class:: classref-property-setget

- |void| **set_show_texture_rough**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_texture_rough**\ (\ )

Albedo is set to the painted Roughness textures. This is different from the roughness modification map above.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_vertex_grid:

.. rst-class:: classref-property

``bool`` **show_vertex_grid** = ``false`` :ref:`🔗<class_Terrain3DMaterial_property_show_vertex_grid>`

.. rst-class:: classref-property-setget

- |void| **set_show_vertex_grid**\ (\ value\: ``bool``\ )
- ``bool`` **get_show_vertex_grid**\ (\ )

Overlays the vertex grid on the terrain, showing where each vertex is. Press `3` with the mouse in the viewport to toggle.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_texture_filtering:

.. rst-class:: classref-property

:ref:`TextureFiltering<enum_Terrain3DMaterial_TextureFiltering>` **texture_filtering** = ``0`` :ref:`🔗<class_Terrain3DMaterial_property_texture_filtering>`

.. rst-class:: classref-property-setget

- |void| **set_texture_filtering**\ (\ value\: :ref:`TextureFiltering<enum_Terrain3DMaterial_TextureFiltering>`\ )
- :ref:`TextureFiltering<enum_Terrain3DMaterial_TextureFiltering>` **get_texture_filtering**\ (\ )

Sets how the renderer should filter textures. See :ref:`TextureFiltering<enum_Terrain3DMaterial_TextureFiltering>` for options.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_world_background:

.. rst-class:: classref-property

:ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>` **world_background** = ``1`` :ref:`🔗<class_Terrain3DMaterial_property_world_background>`

.. rst-class:: classref-property-setget

- |void| **set_world_background**\ (\ value\: :ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>`\ )
- :ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>` **get_world_background**\ (\ )

Sets how the mesh outside of defined regions behave. See :ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>` for options.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_Terrain3DMaterial_method_get_material_rid:

.. rst-class:: classref-method

``RID`` **get_material_rid**\ (\ ) |const| :ref:`🔗<class_Terrain3DMaterial_method_get_material_rid>`

Returns the RID of the material used with the Rendering Server. This is set per instance of this class.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_method_get_shader_param:

.. rst-class:: classref-method

``Variant`` **get_shader_param**\ (\ name\: ``StringName``\ ) |const| :ref:`🔗<class_Terrain3DMaterial_method_get_shader_param>`

Retrieve a parameter from the active shader (built-in or override shader).

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_method_get_shader_rid:

.. rst-class:: classref-method

``RID`` **get_shader_rid**\ (\ ) |const| :ref:`🔗<class_Terrain3DMaterial_method_get_shader_rid>`

Returns the RID of the built in shader used with the Rendering Server. This is different from any shader override which has its own RID.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_method_save:

.. rst-class:: classref-method

Error **save**\ (\ path\: ``String`` = ""\ ) :ref:`🔗<class_Terrain3DMaterial_method_save>`

Saves this material resource to disk, if saved as an external ``.tres`` or ``.res`` resource file.

path - specifies a directory and file name to use from now on.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_method_set_shader_param:

.. rst-class:: classref-method

|void| **set_shader_param**\ (\ name\: ``StringName``, value\: ``Variant``\ ) :ref:`🔗<class_Terrain3DMaterial_method_set_shader_param>`

Set a parameter in the active shader (built-in or override shader).

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_method_update:

.. rst-class:: classref-method

|void| **update**\ (\ ) :ref:`🔗<class_Terrain3DMaterial_method_update>`

Recompiles the current shader and sends all uniform values to it again.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
