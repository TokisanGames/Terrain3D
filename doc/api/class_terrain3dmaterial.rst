:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.1/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.1/../_plugins/Terrain3D/doc/classes/Terrain3DMaterial.xml.

.. _class_Terrain3DMaterial:

Terrain3DMaterial
=================

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

A custom shader resource for Terrain3D.

.. rst-class:: classref-introduction-group

Description
-----------

This class handles options for both the built-in shader and any custom shader. It collects compiled texture data from the other classes and sends all of it to the shader via the RenderingServer.

    It is a savable resource, so you can save it to disk and use the same material settings in multiple scenes that use Terrain3D. The amount of data is small, assuming you have saved your textures to disk, so it can be saved as a git-friendly, text based .tres file or left within the scene file.

    While it does mimic some of the functionality of ShaderMaterial, it does not derive from any of the Godot Material classes. It will not pass any is Material checks, as it is a Resource.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`Dictionary<class_Dictionary>`                              | :ref:`_shader_parameters<class_Terrain3DMaterial_property__shader_parameters>`           | ``{}``    |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`auto_shader<class_Terrain3DMaterial_property_auto_shader>`                         | ``true``  |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`dual_scaling<class_Terrain3DMaterial_property_dual_scaling>`                       | ``true``  |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`Shader<class_Shader>`                                      | :ref:`shader_override<class_Terrain3DMaterial_property_shader_override>`                 |           |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`shader_override_enabled<class_Terrain3DMaterial_property_shader_override_enabled>` | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`show_autoshader<class_Terrain3DMaterial_property_show_autoshader>`                 | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`show_checkered<class_Terrain3DMaterial_property_show_checkered>`                   | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`show_colormap<class_Terrain3DMaterial_property_show_colormap>`                     | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`show_control_blend<class_Terrain3DMaterial_property_show_control_blend>`           | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`show_control_texture<class_Terrain3DMaterial_property_show_control_texture>`       | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`show_grey<class_Terrain3DMaterial_property_show_grey>`                             | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`show_heightmap<class_Terrain3DMaterial_property_show_heightmap>`                   | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`show_navigation<class_Terrain3DMaterial_property_show_navigation>`                 | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`show_roughmap<class_Terrain3DMaterial_property_show_roughmap>`                     | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`show_texture_height<class_Terrain3DMaterial_property_show_texture_height>`         | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`show_texture_normal<class_Terrain3DMaterial_property_show_texture_normal>`         | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`show_texture_rough<class_Terrain3DMaterial_property_show_texture_rough>`           | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                          | :ref:`show_vertex_grid<class_Terrain3DMaterial_property_show_vertex_grid>`               | ``false`` |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`TextureFiltering<enum_Terrain3DMaterial_TextureFiltering>` | :ref:`texture_filtering<class_Terrain3DMaterial_property_texture_filtering>`             | ``0``     |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+
   | :ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>`   | :ref:`world_background<class_Terrain3DMaterial_property_world_background>`               | ``1``     |
   +------------------------------------------------------------------+------------------------------------------------------------------------------------------+-----------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`         | :ref:`get_material_rid<class_Terrain3DMaterial_method_get_material_rid>` **(** **)**                                                                               |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`         | :ref:`get_region_blend_map<class_Terrain3DMaterial_method_get_region_blend_map>` **(** **)**                                                                       |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Variant<class_Variant>` | :ref:`get_shader_param<class_Terrain3DMaterial_method_get_shader_param>` **(** :ref:`StringName<class_StringName>` name **)**                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`         | :ref:`get_shader_rid<class_Terrain3DMaterial_method_get_shader_rid>` **(** **)**                                                                                   |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                          | :ref:`save<class_Terrain3DMaterial_method_save>` **(** **)**                                                                                                       |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                          | :ref:`set_shader_param<class_Terrain3DMaterial_method_set_shader_param>` **(** :ref:`StringName<class_StringName>` name, :ref:`Variant<class_Variant>` value **)** |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_Terrain3DMaterial_WorldBackground:

.. rst-class:: classref-enumeration

enum **WorldBackground**:

.. _class_Terrain3DMaterial_constant_NONE:

.. rst-class:: classref-enumeration-constant

:ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>` **NONE** = ``0``

Outside of the defined regions, hide the mesh.

.. _class_Terrain3DMaterial_constant_FLAT:

.. rst-class:: classref-enumeration-constant

:ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>` **FLAT** = ``1``

Outside of the defined regions, show a flat terrain.

.. _class_Terrain3DMaterial_constant_NOISE:

.. rst-class:: classref-enumeration-constant

:ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>` **NOISE** = ``2``

Outside of the defined regions, generate visual-only hills.

.. rst-class:: classref-item-separator

----

.. _enum_Terrain3DMaterial_TextureFiltering:

.. rst-class:: classref-enumeration

enum **TextureFiltering**:

.. _class_Terrain3DMaterial_constant_LINEAR:

.. rst-class:: classref-enumeration-constant

:ref:`TextureFiltering<enum_Terrain3DMaterial_TextureFiltering>` **LINEAR** = ``0``



.. _class_Terrain3DMaterial_constant_NEAREST:

.. rst-class:: classref-enumeration-constant

:ref:`TextureFiltering<enum_Terrain3DMaterial_TextureFiltering>` **NEAREST** = ``1``



.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_Terrain3DMaterial_property__shader_parameters:

.. rst-class:: classref-property

:ref:`Dictionary<class_Dictionary>` **_shader_parameters** = ``{}``

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_auto_shader:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **auto_shader** = ``true``

.. rst-class:: classref-property-setget

- void **set_auto_shader** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_auto_shader** **(** **)**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_dual_scaling:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **dual_scaling** = ``true``

.. rst-class:: classref-property-setget

- void **set_dual_scaling** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_dual_scaling** **(** **)**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_shader_override:

.. rst-class:: classref-property

:ref:`Shader<class_Shader>` **shader_override**

.. rst-class:: classref-property-setget

- void **set_shader_override** **(** :ref:`Shader<class_Shader>` value **)**
- :ref:`Shader<class_Shader>` **get_shader_override** **(** **)**

If shader_override_enabled is true and this Shader is valid, the material will use this custom shader code. If this is blank when you enable the override, the system will generate a shader with the current settings. So if you have a debug view enabled, the generated shader will have all of that code. A visual shader will also work here. However we only generate a text based shader so currently a visual shader needs to be constructed with the base code before it can work.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_shader_override_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **shader_override_enabled** = ``false``

.. rst-class:: classref-property-setget

- void **enable_shader_override** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_shader_override_enabled** **(** **)**

Enables use of the :ref:`shader_override<class_Terrain3DMaterial_property_shader_override>` shader code. Generates default code if shader_override is blank.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_autoshader:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **show_autoshader** = ``false``

.. rst-class:: classref-property-setget

- void **set_show_autoshader** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_show_autoshader** **(** **)**

Display the area designated for use by the autoshader, which shows materials based upon slope.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_checkered:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **show_checkered** = ``false``

.. rst-class:: classref-property-setget

- void **set_show_checkered** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_show_checkered** **(** **)**

Shows a checkerboard display using a shader rendered pattern. This is turned on if the Texture List is empty.

      Note that when a blank texture slot is created, a 1k checkerboard texture is generated and stored in the texture slot. That takes VRAM. The two patterns have a slightly different scale.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_colormap:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **show_colormap** = ``false``

.. rst-class:: classref-property-setget

- void **set_show_colormap** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_show_colormap** **(** **)**

Places the color map in the albedo channel.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_control_blend:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **show_control_blend** = ``false``

.. rst-class:: classref-property-setget

- void **set_show_control_blend** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_show_control_blend** **(** **)**

Albedo shows the blend value used to blend the base and overlay textures as greyscale. This is especially helpful to see how the noise texture adjusts the blending edges.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_control_texture:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **show_control_texture** = ``false``

.. rst-class:: classref-property-setget

- void **set_show_control_texture** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_show_control_texture** **(** **)**

Albedo shows the base and overlay texture indices defined by the control map. Red pixels indicate the base texture, with brightness showing texture ids 0 to 31. Green pixels indicate the overlay texture. Yellow indicates both.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_grey:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **show_grey** = ``false``

.. rst-class:: classref-property-setget

- void **set_show_grey** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_show_grey** **(** **)**

Albedo is set to 0.3 grey.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_heightmap:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **show_heightmap** = ``false``

.. rst-class:: classref-property-setget

- void **set_show_heightmap** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_show_heightmap** **(** **)**

Albedo is a white to black gradient depending on height. The gradient is scaled to a height of 300, so above that or far below 0 will be all white or black.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_navigation:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **show_navigation** = ``false``

.. rst-class:: classref-property-setget

- void **set_show_navigation** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_show_navigation** **(** **)**

Displays the area designated for generating the navigation mesh.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_roughmap:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **show_roughmap** = ``false``

.. rst-class:: classref-property-setget

- void **set_show_roughmap** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_show_roughmap** **(** **)**

Albedo is set to the roughness modification map as grey scale. Middle grey, 0.5 means no roughness modification. Black would be high gloss while white is very rough.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_texture_height:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **show_texture_height** = ``false``

.. rst-class:: classref-property-setget

- void **set_show_texture_height** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_show_texture_height** **(** **)**

Albedo is set to the painted Height textures.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_texture_normal:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **show_texture_normal** = ``false``

.. rst-class:: classref-property-setget

- void **set_show_texture_normal** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_show_texture_normal** **(** **)**

Albedo is set to the painted Normal textures.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_texture_rough:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **show_texture_rough** = ``false``

.. rst-class:: classref-property-setget

- void **set_show_texture_rough** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_show_texture_rough** **(** **)**

Albedo is set to the painted Roughness textures. This is different from the roughness modification map above.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_show_vertex_grid:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **show_vertex_grid** = ``false``

.. rst-class:: classref-property-setget

- void **set_show_vertex_grid** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_show_vertex_grid** **(** **)**

Show a grid on the vertices, overlaying any above shader.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_texture_filtering:

.. rst-class:: classref-property

:ref:`TextureFiltering<enum_Terrain3DMaterial_TextureFiltering>` **texture_filtering** = ``0``

.. rst-class:: classref-property-setget

- void **set_texture_filtering** **(** :ref:`TextureFiltering<enum_Terrain3DMaterial_TextureFiltering>` value **)**
- :ref:`TextureFiltering<enum_Terrain3DMaterial_TextureFiltering>` **get_texture_filtering** **(** **)**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_property_world_background:

.. rst-class:: classref-property

:ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>` **world_background** = ``1``

.. rst-class:: classref-property-setget

- void **set_world_background** **(** :ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>` value **)**
- :ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>` **get_world_background** **(** **)**

See the :ref:`WorldBackground<enum_Terrain3DMaterial_WorldBackground>` for options.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_Terrain3DMaterial_method_get_material_rid:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **get_material_rid** **(** **)**

Returns the RID of the material used with the Rendering Server. This is set per instance of this class.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_method_get_region_blend_map:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **get_region_blend_map** **(** **)**

Returns the RID of the 512x512 texture used with the RenderingServer. It depicts a blurry map of region locations and is used for smoothly blending world noise into sculpted terrain.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_method_get_shader_param:

.. rst-class:: classref-method

:ref:`Variant<class_Variant>` **get_shader_param** **(** :ref:`StringName<class_StringName>` name **)**

Retrieve a parameter from the active shader (built-in or override shader).

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_method_get_shader_rid:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **get_shader_rid** **(** **)**

Returns the RID of the built in shader used with the Rendering Server. This is different from any shader override which has its own RID.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_method_save:

.. rst-class:: classref-method

void **save** **(** **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMaterial_method_set_shader_param:

.. rst-class:: classref-method

void **set_shader_param** **(** :ref:`StringName<class_StringName>` name, :ref:`Variant<class_Variant>` value **)**

Set a parameter in the active shader (built-in or override shader).

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
