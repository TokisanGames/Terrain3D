:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/../_plugins/Terrain3D/doc/doc_classes/Terrain3DUtil.xml.

.. _class_Terrain3DUtil:

Terrain3DUtil
=============

**Inherits:** ``Object``

.. rst-class:: classref-introduction-group

Description
-----------

This class contains static utility functions. Reference them with the full class name. Eg. ``Terrain3DUtil.as_float()``.

Or you can instance the class for a shorter alias:

::

    var util := Terrain3DUtil.new()
    var my_float: float = util.as_float(my_int)

\ **Note on uints**: Various functions refer to unsigned integers as uint. Though GDScript doesn't support unsigned integers as a type, the C++ that receives and returns these values will interpret them all as unsigned.

\ **Note on bitwise-ORing**: To write back to a control map, encode your values and bitwise OR the results, then reinterpret that uint as a float. The shader will interpret the float as uint and extract the bits.

::

    var bits: int = util.enc_base(base_id) | util.enc_overlay(over_id) | \
    util.enc_blend(blend) | util.enc_uv_rotation(uvrotation) | \
    util.enc_uv_scale(uvscale) | util.enc_auto(autoshader) | \
    util.enc_nav(navigation) | util.enc_hole(hole)
    var color: Color = Color(util.as_float(bits), 0., 0., 1.)
    data.set_control(global_pos, color)

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``float``    | :ref:`as_float<class_Terrain3DUtil_method_as_float>`\ (\ value\: ``int``\ ) |static|                                                                                                                                  |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``      | :ref:`as_uint<class_Terrain3DUtil_method_as_uint>`\ (\ value\: ``float``\ ) |static|                                                                                                                                  |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Image``    | :ref:`black_to_alpha<class_Terrain3DUtil_method_black_to_alpha>`\ (\ image\: ``Image``\ ) |static|                                                                                                                    |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``      | :ref:`enc_auto<class_Terrain3DUtil_method_enc_auto>`\ (\ pixel\: ``bool``\ ) |static|                                                                                                                                 |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``      | :ref:`enc_base<class_Terrain3DUtil_method_enc_base>`\ (\ base\: ``int``\ ) |static|                                                                                                                                   |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``      | :ref:`enc_blend<class_Terrain3DUtil_method_enc_blend>`\ (\ blend\: ``int``\ ) |static|                                                                                                                                |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``      | :ref:`enc_hole<class_Terrain3DUtil_method_enc_hole>`\ (\ pixel\: ``bool``\ ) |static|                                                                                                                                 |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``      | :ref:`enc_nav<class_Terrain3DUtil_method_enc_nav>`\ (\ pixel\: ``bool``\ ) |static|                                                                                                                                   |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``      | :ref:`enc_overlay<class_Terrain3DUtil_method_enc_overlay>`\ (\ overlay\: ``int``\ ) |static|                                                                                                                          |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``      | :ref:`enc_uv_rotation<class_Terrain3DUtil_method_enc_uv_rotation>`\ (\ rotation\: ``int``\ ) |static|                                                                                                                 |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``      | :ref:`enc_uv_scale<class_Terrain3DUtil_method_enc_uv_scale>`\ (\ scale\: ``int``\ ) |static|                                                                                                                          |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector2i`` | :ref:`filename_to_location<class_Terrain3DUtil_method_filename_to_location>`\ (\ filename\: ``String``\ ) |static|                                                                                                    |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``      | :ref:`get_base<class_Terrain3DUtil_method_get_base>`\ (\ pixel\: ``int``\ ) |static|                                                                                                                                  |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``      | :ref:`get_blend<class_Terrain3DUtil_method_get_blend>`\ (\ pixel\: ``int``\ ) |static|                                                                                                                                |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Image``    | :ref:`get_filled_image<class_Terrain3DUtil_method_get_filled_image>`\ (\ size\: ``Vector2i``, color\: ``Color``, create_mipmaps\: ``bool``, format\: Image.Format\ ) |static|                                         |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector2``  | :ref:`get_min_max<class_Terrain3DUtil_method_get_min_max>`\ (\ image\: ``Image``\ ) |static|                                                                                                                          |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``      | :ref:`get_overlay<class_Terrain3DUtil_method_get_overlay>`\ (\ pixel\: ``int``\ ) |static|                                                                                                                            |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Image``    | :ref:`get_thumbnail<class_Terrain3DUtil_method_get_thumbnail>`\ (\ image\: ``Image``, size\: ``Vector2i`` = Vector2i(256, 256)\ ) |static|                                                                            |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``      | :ref:`get_uv_rotation<class_Terrain3DUtil_method_get_uv_rotation>`\ (\ pixel\: ``int``\ ) |static|                                                                                                                    |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``      | :ref:`get_uv_scale<class_Terrain3DUtil_method_get_uv_scale>`\ (\ pixel\: ``int``\ ) |static|                                                                                                                          |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``     | :ref:`is_auto<class_Terrain3DUtil_method_is_auto>`\ (\ pixel\: ``int``\ ) |static|                                                                                                                                    |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``     | :ref:`is_hole<class_Terrain3DUtil_method_is_hole>`\ (\ pixel\: ``int``\ ) |static|                                                                                                                                    |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``     | :ref:`is_nav<class_Terrain3DUtil_method_is_nav>`\ (\ pixel\: ``int``\ ) |static|                                                                                                                                      |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Image``    | :ref:`load_image<class_Terrain3DUtil_method_load_image>`\ (\ file_name\: ``String``, cache_mode\: ``int`` = 0, r16_height_range\: ``Vector2`` = Vector2(0, 255), r16_size\: ``Vector2i`` = Vector2i(0, 0)\ ) |static| |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``String``   | :ref:`location_to_filename<class_Terrain3DUtil_method_location_to_filename>`\ (\ region_location\: ``Vector2i``\ ) |static|                                                                                           |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Image``    | :ref:`luminance_to_height<class_Terrain3DUtil_method_luminance_to_height>`\ (\ src_rgb\: ``Image`` = false\ ) |static|                                                                                                |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Image``    | :ref:`pack_image<class_Terrain3DUtil_method_pack_image>`\ (\ src_rgb\: ``Image``, src_a\: ``Image``, invert_green\: ``bool`` = false, invert_alpha\: ``bool`` = false, alpha_channel\: ``int`` = 0\ ) |static|        |
   +--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_Terrain3DUtil_method_as_float:

.. rst-class:: classref-method

``float`` **as_float**\ (\ value\: ``int``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_as_float>`

Returns a float typed variable with the contents of the memory stored in value, an integer typed variable.

This function does not convert integer values to float values (e.g. 4 -> 4.0). It reinterprets the memory block as if it were a float. If the data in value was a valid integer, it is now an invalid float.

\ ``my_float == util.as_float(util.as_uint(my_float))``\ 

See :ref:`as_uint<class_Terrain3DUtil_method_as_uint>` for the opposite.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_as_uint:

.. rst-class:: classref-method

``int`` **as_uint**\ (\ value\: ``float``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_as_uint>`

Returns an integer typed variable with the contents of the memory stored in value, a float typed variable.

This function does not convert float values to integer values (e.g. 4.0 -> 4). It reinterprets the memory block as if it were an integer. If the data in value was a valid float, it is now a valid integer, but probably an unexepctedly large value.

\ ``my_int == util.as_uint(util.as_float(my_int))``\ 

See :ref:`as_float<class_Terrain3DUtil_method_as_float>` for the opposite.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_black_to_alpha:

.. rst-class:: classref-method

``Image`` **black_to_alpha**\ (\ image\: ``Image``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_black_to_alpha>`

Receives an image with a black background and returns one with a transparent background, aka an alpha mask.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_enc_auto:

.. rst-class:: classref-method

``int`` **enc_auto**\ (\ pixel\: ``bool``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_enc_auto>`

Returns a control map uint with the auto shader bit set. See the top description for usage.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_enc_base:

.. rst-class:: classref-method

``int`` **enc_base**\ (\ base\: ``int``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_enc_base>`

Returns a control map uint with the base texture ID encoded. See the top description for usage.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_enc_blend:

.. rst-class:: classref-method

``int`` **enc_blend**\ (\ blend\: ``int``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_enc_blend>`

Returns a control map uint with the blend value encoded. See the top description for usage.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_enc_hole:

.. rst-class:: classref-method

``int`` **enc_hole**\ (\ pixel\: ``bool``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_enc_hole>`

Returns a control map uint with the hole bit set. See the top description for usage.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_enc_nav:

.. rst-class:: classref-method

``int`` **enc_nav**\ (\ pixel\: ``bool``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_enc_nav>`

Returns a control map uint with the nav bit set. See the top description for usage.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_enc_overlay:

.. rst-class:: classref-method

``int`` **enc_overlay**\ (\ overlay\: ``int``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_enc_overlay>`

Returns a control map uint with the overlay texture ID encoded. See the top description for usage.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_enc_uv_rotation:

.. rst-class:: classref-method

``int`` **enc_uv_rotation**\ (\ rotation\: ``int``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_enc_uv_rotation>`

Returns a control map uint with the texture rotation encoded. See the top description for usage.  See :ref:`get_uv_rotation<class_Terrain3DUtil_method_get_uv_rotation>` for values.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_enc_uv_scale:

.. rst-class:: classref-method

``int`` **enc_uv_scale**\ (\ scale\: ``int``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_enc_uv_scale>`

Returns a control map uint with the texture scale encoded. See the top description for usage. See :ref:`get_uv_scale<class_Terrain3DUtil_method_get_uv_scale>` for values.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_filename_to_location:

.. rst-class:: classref-method

``Vector2i`` **filename_to_location**\ (\ filename\: ``String``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_filename_to_location>`

Converts a file name string like ``terrain3d-01_02.res`` to a region location like ``(-1, 2)``. - is negative, \_ is positive.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_get_base:

.. rst-class:: classref-method

``int`` **get_base**\ (\ pixel\: ``int``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_get_base>`

Returns the base texture ID from a control map pixel.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_get_blend:

.. rst-class:: classref-method

``int`` **get_blend**\ (\ pixel\: ``int``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_get_blend>`

Returns the blend value from a control map pixel.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_get_filled_image:

.. rst-class:: classref-method

``Image`` **get_filled_image**\ (\ size\: ``Vector2i``, color\: ``Color``, create_mipmaps\: ``bool``, format\: Image.Format\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_get_filled_image>`

Returns an Image filled with a specified color and format.

If ``color.a < 0``, its filled with a checkered pattern multiplied by ``color.rgb``.

The behavior changes if a compressed format is requested:

- If the editor is running and the format is DXT1, DXT5, or BPTC_RGBA, it returns a filled image in the requested color and format.

- All other compressed formats return a blank image in that format.

The reason for this is the Image compression library is available only in the editor. And it is unreliable, offering little control over the output format, choosing automatically and often wrong. We have selected a few compressed formats it gets right.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_get_min_max:

.. rst-class:: classref-method

``Vector2`` **get_min_max**\ (\ image\: ``Image``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_get_min_max>`

Returns the minimum and maximum r channel values of an Image. Used for heightmaps.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_get_overlay:

.. rst-class:: classref-method

``int`` **get_overlay**\ (\ pixel\: ``int``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_get_overlay>`

Returns the overlay texture ID from a control map pixel.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_get_thumbnail:

.. rst-class:: classref-method

``Image`` **get_thumbnail**\ (\ image\: ``Image``, size\: ``Vector2i`` = Vector2i(256, 256)\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_get_thumbnail>`

Returns an Image normalized and converted to RGB8. Used for creating a human viewable image of a heightmap, at any size.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_get_uv_rotation:

.. rst-class:: classref-method

``int`` **get_uv_rotation**\ (\ pixel\: ``int``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_get_uv_rotation>`

Returns the texture rotation from a control map pixel. Values are 0 - 15, which provides degrees when multiplied by 22.5. (360/16).

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_get_uv_scale:

.. rst-class:: classref-method

``int`` **get_uv_scale**\ (\ pixel\: ``int``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_get_uv_scale>`

Returns the texture scale modification from a control map pixel. Values are an index into the array `{ 0, 20, 40, 60, 80, -60, -40, -20 }`. 0 indicates no scale modification. Index 2 indicates a 40% increase in texture scale at that pixel. Index -1 or 7 indicates a -20% texture scale change.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_is_auto:

.. rst-class:: classref-method

``bool`` **is_auto**\ (\ pixel\: ``int``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_is_auto>`

Returns true if the control map pixel has the autoshader bit set.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_is_hole:

.. rst-class:: classref-method

``bool`` **is_hole**\ (\ pixel\: ``int``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_is_hole>`

Returns true if the control map pixel has the hole bit set.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_is_nav:

.. rst-class:: classref-method

``bool`` **is_nav**\ (\ pixel\: ``int``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_is_nav>`

Returns true if the control map pixel has the nav bit set.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_load_image:

.. rst-class:: classref-method

``Image`` **load_image**\ (\ file_name\: ``String``, cache_mode\: ``int`` = 0, r16_height_range\: ``Vector2`` = Vector2(0, 255), r16_size\: ``Vector2i`` = Vector2i(0, 0)\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_load_image>`

Loads a file from disk and returns an Image.

\ ``filename`` - The file name on disk to load. Loads EXR, R16/RAW, PNG, or a ResourceLoader format (jpg, res, tres, etc).

\ ``cache_mode`` - Send this flag to the resource loader to force caching or not.

\ ``height_range`` - Heights for R16 format. x=Min & y=Max value ranges. Required for R16 import.

\ ``size`` - Image dimensions for R16 format. Default (0,0) auto detects size, assuming square images. Required for non-square R16.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_location_to_filename:

.. rst-class:: classref-method

``String`` **location_to_filename**\ (\ region_location\: ``Vector2i``\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_location_to_filename>`

Converts a region location like ``(-1, 2)`` to a file name string like ``terrain3d-01_02.res``. - is negative, \_ is positive.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_luminance_to_height:

.. rst-class:: classref-method

``Image`` **luminance_to_height**\ (\ src_rgb\: ``Image`` = false\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_luminance_to_height>`

Generates a greyscale RGB8 height texture from the luminance values of the source image.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DUtil_method_pack_image:

.. rst-class:: classref-method

``Image`` **pack_image**\ (\ src_rgb\: ``Image``, src_a\: ``Image``, invert_green\: ``bool`` = false, invert_alpha\: ``bool`` = false, alpha_channel\: ``int`` = 0\ ) |static| :ref:`🔗<class_Terrain3DUtil_method_pack_image>`

Returns an RGBA Image packed for terrain usage.

- ``src_rgb`` - The source Image for the RGB channels.

- ``src_a`` - The source image for the A channel.

- ``invert_green`` - Inverts the green channel to convert between OpenGL and DirectX normal maps.

- ``invert_alpha`` - Inverts the alpha channel to convert between Roughness and Smoothness maps.

- ``alpha_channel`` - The channel index (0-3: R,G,B,A) to use from src_a for the alpha channel.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
