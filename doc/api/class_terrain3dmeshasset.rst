:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/../_plugins/Terrain3D/doc/classes/Terrain3DMeshAsset.xml.

.. _class_Terrain3DMeshAsset:

Terrain3DMeshAsset
==================

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

.. rst-class:: classref-introduction-group

Description
-----------

This class provides one of two mesh types for instancing. 

First, this class will generate a texture card, using a QuadMesh.	The typical use for a texture card is to place a flat grass texture in the `albedo texture` slot in the override material, and enable alpha scissor. This will generate low poly grass.

Second, you can link this resource to a mesh scene file, which is specifically a PackedScene (.tscn, .scn, .glb, .fbx, etc). You can override the material if desired.

Currently, the system will use only the first MeshInstance3D it finds in the file. It doesn't apply any transforms nor collision found in the file. Auto generated lods are used by the engine.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-------------------------------------------------+-------------------------------------------------------------------------------+-------------------+
   | :ref:`Vector2<class_Vector2>`                   | :ref:`generated_size<class_Terrain3DMeshAsset_property_generated_size>`       | ``Vector2(1, 1)`` |
   +-------------------------------------------------+-------------------------------------------------------------------------------+-------------------+
   | :ref:`GenType<enum_Terrain3DMeshAsset_GenType>` | :ref:`generated_type<class_Terrain3DMeshAsset_property_generated_type>`       | ``0``             |
   +-------------------------------------------------+-------------------------------------------------------------------------------+-------------------+
   | :ref:`float<class_float>`                       | :ref:`height_offset<class_Terrain3DMeshAsset_property_height_offset>`         | ``0.0``           |
   +-------------------------------------------------+-------------------------------------------------------------------------------+-------------------+
   | :ref:`int<class_int>`                           | :ref:`id<class_Terrain3DMeshAsset_property_id>`                               | ``0``             |
   +-------------------------------------------------+-------------------------------------------------------------------------------+-------------------+
   | :ref:`Material<class_Material>`                 | :ref:`material_override<class_Terrain3DMeshAsset_property_material_override>` |                   |
   +-------------------------------------------------+-------------------------------------------------------------------------------+-------------------+
   | :ref:`String<class_String>`                     | :ref:`name<class_Terrain3DMeshAsset_property_name>`                           | ``"New Mesh"``    |
   +-------------------------------------------------+-------------------------------------------------------------------------------+-------------------+
   | :ref:`PackedScene<class_PackedScene>`           | :ref:`scene_file<class_Terrain3DMeshAsset_property_scene_file>`               |                   |
   +-------------------------------------------------+-------------------------------------------------------------------------------+-------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------------+----------------------------------------------------------------------------------------------------+
   | |void|                            | :ref:`clear<class_Terrain3DMeshAsset_method_clear>`\ (\ )                                          |
   +-----------------------------------+----------------------------------------------------------------------------------------------------+
   | :ref:`Mesh<class_Mesh>`           | :ref:`get_mesh<class_Terrain3DMeshAsset_method_get_mesh>`\ (\ index\: :ref:`int<class_int>` = 0\ ) |
   +-----------------------------------+----------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`             | :ref:`get_mesh_count<class_Terrain3DMeshAsset_method_get_mesh_count>`\ (\ )                        |
   +-----------------------------------+----------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`         | :ref:`get_relative_density<class_Terrain3DMeshAsset_method_get_relative_density>`\ (\ )            |
   +-----------------------------------+----------------------------------------------------------------------------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`get_thumbnail<class_Terrain3DMeshAsset_method_get_thumbnail>`\ (\ )                          |
   +-----------------------------------+----------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_Terrain3DMeshAsset_signal_file_changed:

.. rst-class:: classref-signal

**file_changed**\ (\ )

Emitted when :ref:`scene_file<class_Terrain3DMeshAsset_property_scene_file>` is changed, or if the generated mesh is toggled.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMeshAsset_signal_id_changed:

.. rst-class:: classref-signal

**id_changed**\ (\ )

Emitted when :ref:`id<class_Terrain3DMeshAsset_property_id>` is changed.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMeshAsset_signal_setting_changed:

.. rst-class:: classref-signal

**setting_changed**\ (\ )

Emitted when settings other than id or scene file are changed.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_Terrain3DMeshAsset_GenType:

.. rst-class:: classref-enumeration

enum **GenType**:

.. _class_Terrain3DMeshAsset_constant_TYPE_NONE:

.. rst-class:: classref-enumeration-constant

:ref:`GenType<enum_Terrain3DMeshAsset_GenType>` **TYPE_NONE** = ``0``

.. container:: contribute

	There is currently no description for this enum. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!



.. _class_Terrain3DMeshAsset_constant_TYPE_TEXTURE_CARD:

.. rst-class:: classref-enumeration-constant

:ref:`GenType<enum_Terrain3DMeshAsset_GenType>` **TYPE_TEXTURE_CARD** = ``1``

Generate a QuadMesh to be used as a texture card.

.. _class_Terrain3DMeshAsset_constant_TYPE_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`GenType<enum_Terrain3DMeshAsset_GenType>` **TYPE_MAX** = ``2``

.. container:: contribute

	There is currently no description for this enum. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!



.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_Terrain3DMeshAsset_property_generated_size:

.. rst-class:: classref-property

:ref:`Vector2<class_Vector2>` **generated_size** = ``Vector2(1, 1)``

.. rst-class:: classref-property-setget

- |void| **set_generated_size**\ (\ value\: :ref:`Vector2<class_Vector2>`\ )
- :ref:`Vector2<class_Vector2>` **get_generated_size**\ (\ )

Sets the base size of the QuadMesh texture card.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMeshAsset_property_generated_type:

.. rst-class:: classref-property

:ref:`GenType<enum_Terrain3DMeshAsset_GenType>` **generated_type** = ``0``

.. rst-class:: classref-property-setget

- |void| **set_generated_type**\ (\ value\: :ref:`GenType<enum_Terrain3DMeshAsset_GenType>`\ )
- :ref:`GenType<enum_Terrain3DMeshAsset_GenType>` **get_generated_type**\ (\ )

Set this mesh asset to a generated QuadMesh to be used as a texture card.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMeshAsset_property_height_offset:

.. rst-class:: classref-property

:ref:`float<class_float>` **height_offset** = ``0.0``

.. rst-class:: classref-property-setget

- |void| **set_height_offset**\ (\ value\: :ref:`float<class_float>`\ )
- :ref:`float<class_float>` **get_height_offset**\ (\ )

Vertically offset the origin point of a mesh asset. You can also set this when painting.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMeshAsset_property_id:

.. rst-class:: classref-property

:ref:`int<class_int>` **id** = ``0``

.. rst-class:: classref-property-setget

- |void| **set_id**\ (\ value\: :ref:`int<class_int>`\ )
- :ref:`int<class_int>` **get_id**\ (\ )

The user settable ID of the mesh. You can change this to reorder meshes in the list. However, beware if you have instanced 10s or 100s of thousands of texture cards, then swap this mesh id with a large mesh, you'll blow out your VRAM. Godot has no protection against running out of VRAM currently.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMeshAsset_property_material_override:

.. rst-class:: classref-property

:ref:`Material<class_Material>` **material_override**

.. rst-class:: classref-property-setget

- |void| **set_material_override**\ (\ value\: :ref:`Material<class_Material>`\ )
- :ref:`Material<class_Material>` **get_material_override**\ (\ )

This material will override the material on either packed scenes or generated mesh cards.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMeshAsset_property_name:

.. rst-class:: classref-property

:ref:`String<class_String>` **name** = ``"New Mesh"``

.. rst-class:: classref-property-setget

- |void| **set_name**\ (\ value\: :ref:`String<class_String>`\ )
- :ref:`String<class_String>` **get_name**\ (\ )

A user specified name for this asset.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMeshAsset_property_scene_file:

.. rst-class:: classref-property

:ref:`PackedScene<class_PackedScene>` **scene_file**

.. rst-class:: classref-property-setget

- |void| **set_scene_file**\ (\ value\: :ref:`PackedScene<class_PackedScene>`\ )
- :ref:`PackedScene<class_PackedScene>` **get_scene_file**\ (\ )

A packed scene to load the mesh from. See the top description.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_Terrain3DMeshAsset_method_clear:

.. rst-class:: classref-method

|void| **clear**\ (\ )

Reset this resource to default settings.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMeshAsset_method_get_mesh:

.. rst-class:: classref-method

:ref:`Mesh<class_Mesh>` **get_mesh**\ (\ index\: :ref:`int<class_int>` = 0\ )

Returns the specified Mesh resource indicated. Only id 0 is used currently.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMeshAsset_method_get_mesh_count:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_mesh_count**\ (\ )

Returns the number of Mesh resources found in the scene file and stored.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMeshAsset_method_get_relative_density:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_relative_density**\ (\ )

Used for regulating placement, calculated as `100.f / mesh.get_aabb().get_volume()`.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DMeshAsset_method_get_thumbnail:

.. rst-class:: classref-method

:ref:`Texture2D<class_Texture2D>` **get_thumbnail**\ (\ )

Returns the thumbnail generated by :ref:`Terrain3DAssets<class_Terrain3DAssets>`.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
