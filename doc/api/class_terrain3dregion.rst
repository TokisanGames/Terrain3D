:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/../_plugins/Terrain3D/doc/doc_classes/Terrain3DRegion.xml.

.. _class_Terrain3DRegion:

Terrain3DRegion
===============

**Inherits:** ``Resource``

.. rst-class:: classref-introduction-group

Description
-----------

This resource stores all map data for Terrain3D. See `Controlmap Format <https://terrain3d.readthedocs.io/en/stable/docs/controlmap_format.html>`__ and `Data Format Changelog <https://terrain3d.readthedocs.io/en/stable/docs/controlmap_format.html>`__.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +----------------+----------------------------------------------------------------------+-------------------+
   | ``Image``      | :ref:`color_map<class_Terrain3DRegion_property_color_map>`           |                   |
   +----------------+----------------------------------------------------------------------+-------------------+
   | ``Image``      | :ref:`control_map<class_Terrain3DRegion_property_control_map>`       |                   |
   +----------------+----------------------------------------------------------------------+-------------------+
   | ``bool``       | :ref:`deleted<class_Terrain3DRegion_property_deleted>`               |                   |
   +----------------+----------------------------------------------------------------------+-------------------+
   | ``bool``       | :ref:`edited<class_Terrain3DRegion_property_edited>`                 |                   |
   +----------------+----------------------------------------------------------------------+-------------------+
   | ``Image``      | :ref:`height_map<class_Terrain3DRegion_property_height_map>`         |                   |
   +----------------+----------------------------------------------------------------------+-------------------+
   | ``Vector2``    | :ref:`height_range<class_Terrain3DRegion_property_height_range>`     | ``Vector2(0, 0)`` |
   +----------------+----------------------------------------------------------------------+-------------------+
   | ``Dictionary`` | :ref:`instances<class_Terrain3DRegion_property_instances>`           | ``{}``            |
   +----------------+----------------------------------------------------------------------+-------------------+
   | ``Vector2i``   | :ref:`location<class_Terrain3DRegion_property_location>`             |                   |
   +----------------+----------------------------------------------------------------------+-------------------+
   | ``bool``       | :ref:`modified<class_Terrain3DRegion_property_modified>`             |                   |
   +----------------+----------------------------------------------------------------------+-------------------+
   | ``int``        | :ref:`region_size<class_Terrain3DRegion_property_region_size>`       | ``0``             |
   +----------------+----------------------------------------------------------------------+-------------------+
   | ``float``      | :ref:`version<class_Terrain3DRegion_property_version>`               | ``0.8``           |
   +----------------+----------------------------------------------------------------------+-------------------+
   | ``float``      | :ref:`vertex_spacing<class_Terrain3DRegion_property_vertex_spacing>` | ``1.0``           |
   +----------------+----------------------------------------------------------------------+-------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                        | :ref:`calc_height_range<class_Terrain3DRegion_method_calc_height_range>`\ (\ )                                                                         |
   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Terrain3DRegion<class_Terrain3DRegion>` | :ref:`duplicate<class_Terrain3DRegion_method_duplicate>`\ (\ deep\: ``bool`` = false\ )                                                                |
   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Dictionary``                                | :ref:`get_data<class_Terrain3DRegion_method_get_data>`\ (\ ) |const|                                                                                   |
   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Image``                                     | :ref:`get_map<class_Terrain3DRegion_method_get_map>`\ (\ map_type\: :ref:`MapType<enum_Terrain3DRegion_MapType>`\ ) |const|                            |
   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Array<class_Array>`\[``Image``\]        | :ref:`get_maps<class_Terrain3DRegion_method_get_maps>`\ (\ ) |const|                                                                                   |
   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Image``                                     | :ref:`sanitize_map<class_Terrain3DRegion_method_sanitize_map>`\ (\ map_type\: :ref:`MapType<enum_Terrain3DRegion_MapType>`, map\: ``Image``\ ) |const| |
   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                        | :ref:`sanitize_maps<class_Terrain3DRegion_method_sanitize_maps>`\ (\ )                                                                                 |
   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
   | Error                                         | :ref:`save<class_Terrain3DRegion_method_save>`\ (\ path\: ``String`` = "", 16-bit\: ``bool`` = false\ )                                                |
   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                        | :ref:`set_data<class_Terrain3DRegion_method_set_data>`\ (\ data\: ``Dictionary``\ )                                                                    |
   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                        | :ref:`set_map<class_Terrain3DRegion_method_set_map>`\ (\ map_type\: :ref:`MapType<enum_Terrain3DRegion_MapType>`, map\: ``Image``\ )                   |
   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                        | :ref:`set_maps<class_Terrain3DRegion_method_set_maps>`\ (\ maps\: :ref:`Array<class_Array>`\[``Image``\]\ )                                            |
   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                        | :ref:`update_height<class_Terrain3DRegion_method_update_height>`\ (\ height\: ``float``\ )                                                             |
   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                        | :ref:`update_heights<class_Terrain3DRegion_method_update_heights>`\ (\ low_high\: ``Vector2``\ )                                                       |
   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``                                      | :ref:`validate_map_size<class_Terrain3DRegion_method_validate_map_size>`\ (\ map\: ``Image``\ ) |const|                                                |
   +-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_Terrain3DRegion_MapType:

.. rst-class:: classref-enumeration

enum **MapType**: :ref:`ðŸ”—<enum_Terrain3DRegion_MapType>`

.. _class_Terrain3DRegion_constant_TYPE_HEIGHT:

.. rst-class:: classref-enumeration-constant

:ref:`MapType<enum_Terrain3DRegion_MapType>` **TYPE_HEIGHT** = ``0``

Height map - real values, eg. 10m, 44.5m.

.. _class_Terrain3DRegion_constant_TYPE_CONTROL:

.. rst-class:: classref-enumeration-constant

:ref:`MapType<enum_Terrain3DRegion_MapType>` **TYPE_CONTROL** = ``1``

Control map - defines where textures and holes are placed.

.. _class_Terrain3DRegion_constant_TYPE_COLOR:

.. rst-class:: classref-enumeration-constant

:ref:`MapType<enum_Terrain3DRegion_MapType>` **TYPE_COLOR** = ``2``

Color map - paints color on the terrain

.. _class_Terrain3DRegion_constant_TYPE_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`MapType<enum_Terrain3DRegion_MapType>` **TYPE_MAX** = ``3``

The number of elements in this enum.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_Terrain3DRegion_property_color_map:

.. rst-class:: classref-property

``Image`` **color_map** :ref:`ðŸ”—<class_Terrain3DRegion_property_color_map>`

.. rst-class:: classref-property-setget

- |void| **set_color_map**\ (\ value\: ``Image``\ )
- ``Image`` **get_color_map**\ (\ )

This map is used to paint color that blends in to the terrain textures.

Image format: FORMAT_RGBA8, 32-bits per pixel as four 8-bit components.

\ **RGB** is used for color, which is multiplied by albedo in the shader. Multiply is a blend mode that only darkens.

\ **A** is used for a roughness modifier. A value of 0.5 means no change to the existing texture roughness. Higher than this value increases roughness, lower decreases it.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_property_control_map:

.. rst-class:: classref-property

``Image`` **control_map** :ref:`ðŸ”—<class_Terrain3DRegion_property_control_map>`

.. rst-class:: classref-property-setget

- |void| **set_control_map**\ (\ value\: ``Image``\ )
- ``Image`` **get_control_map**\ (\ )

This map tells the shader which textures to use where, how to blend, where to place holes, etc.

Image format: FORMAT_RF, 32-bit per pixel as full-precision floating-point.

However, we interpret these images as format: `RenderingDevice.DATA_FORMAT_R32_UINT <https://docs.godotengine.org/en/stable/classes/class_renderingdevice.html#class-renderingdevice-constant-data-format-r32-uint>`__ aka OpenGL RG32UI 32-bit per pixel as unsigned integer. See `Control map format <https://terrain3d.readthedocs.io/en/stable/docs/controlmap_format.html>`__.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_property_deleted:

.. rst-class:: classref-property

``bool`` **deleted** :ref:`ðŸ”—<class_Terrain3DRegion_property_deleted>`

.. rst-class:: classref-property-setget

- |void| **set_deleted**\ (\ value\: ``bool``\ )
- ``bool`` **is_deleted**\ (\ )

This region is marked for deletion. It won't be rendered once :ref:`Terrain3DData.force_update_maps<class_Terrain3DData_method_force_update_maps>` rebuilds the map index. The file will be deleted from disk on :ref:`save<class_Terrain3DRegion_method_save>`.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_property_edited:

.. rst-class:: classref-property

``bool`` **edited** :ref:`ðŸ”—<class_Terrain3DRegion_property_edited>`

.. rst-class:: classref-property-setget

- |void| **set_edited**\ (\ value\: ``bool``\ )
- ``bool`` **is_edited**\ (\ )

This region is marked for saving in the undo/redo system by :ref:`Terrain3DEditor<class_Terrain3DEditor>` during an operation.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_property_height_map:

.. rst-class:: classref-property

``Image`` **height_map** :ref:`ðŸ”—<class_Terrain3DRegion_property_height_map>`

.. rst-class:: classref-property-setget

- |void| **set_height_map**\ (\ value\: ``Image``\ )
- ``Image`` **get_height_map**\ (\ )

This map contains the real value heights for the terrain.

Image format: FORMAT_RF, 32-bit per pixel as full-precision floating-point.

Heights sent to the vertex shader on the GPU which modifies the mesh in real-time.

Editing is always done in 32-bit. We do provide an option to save as 16-bit, see :ref:`Terrain3D.save_16_bit<class_Terrain3D_property_save_16_bit>`.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_property_height_range:

.. rst-class:: classref-property

``Vector2`` **height_range** = ``Vector2(0, 0)`` :ref:`ðŸ”—<class_Terrain3DRegion_property_height_range>`

.. rst-class:: classref-property-setget

- |void| **set_height_range**\ (\ value\: ``Vector2``\ )
- ``Vector2`` **get_height_range**\ (\ )

The current minimum and maximum height range for this region, used to calculate the AABB of the terrain. Update it with :ref:`update_height<class_Terrain3DRegion_method_update_height>`, and recalculate it with :ref:`calc_height_range<class_Terrain3DRegion_method_calc_height_range>`.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_property_instances:

.. rst-class:: classref-property

``Dictionary`` **instances** = ``{}`` :ref:`ðŸ”—<class_Terrain3DRegion_property_instances>`

.. rst-class:: classref-property-setget

- |void| **set_instances**\ (\ value\: ``Dictionary``\ )
- ``Dictionary`` **get_instances**\ (\ )

A Dictionary that stores the instancer transforms for this region.

The format is instances{mesh_id:int} -> cells{grid_location:Vector2i} -> ( Array:Transform3D, PackedColorArray, modified:bool ). That is:

- A Dictionary keyed by mesh_id that returns:

- A Dictionary keyed by the grid location of the 32 x 32m cell that returns:

- A 3-item Array that contains:

- 0: An Array of Transform3Ds

- 1: A PackedColorArray with instance colors, same index as above

- 2: A bool that tracks if this cell has been modified

After changing this data, :ref:`Terrain3DInstancer.force_update_mmis<class_Terrain3DInstancer_method_force_update_mmis>` should be called to rebuild the MMIs.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_property_location:

.. rst-class:: classref-property

``Vector2i`` **location** :ref:`ðŸ”—<class_Terrain3DRegion_property_location>`

.. rst-class:: classref-property-setget

- |void| **set_location**\ (\ value\: ``Vector2i``\ )
- ``Vector2i`` **get_location**\ (\ )

The region location, or region grid coordinates in the world space where this region lives.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_property_modified:

.. rst-class:: classref-property

``bool`` **modified** :ref:`ðŸ”—<class_Terrain3DRegion_property_modified>`

.. rst-class:: classref-property-setget

- |void| **set_modified**\ (\ value\: ``bool``\ )
- ``bool`` **is_modified**\ (\ )

This region has been modified and will be saved.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_property_region_size:

.. rst-class:: classref-property

``int`` **region_size** = ``0`` :ref:`ðŸ”—<class_Terrain3DRegion_property_region_size>`

.. rst-class:: classref-property-setget

- |void| **set_region_size**\ (\ value\: ``int``\ )
- ``int`` **get_region_size**\ (\ )

The current region size for this region, calculated from the dimensions of the first loaded map. It should match :ref:`Terrain3D.region_size<class_Terrain3D_property_region_size>`.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_property_version:

.. rst-class:: classref-property

``float`` **version** = ``0.8`` :ref:`ðŸ”—<class_Terrain3DRegion_property_version>`

.. rst-class:: classref-property-setget

- |void| **set_version**\ (\ value\: ``float``\ )
- ``float`` **get_version**\ (\ )

The data file version. This is independent of the Terrain3D version, though they often align.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_property_vertex_spacing:

.. rst-class:: classref-property

``float`` **vertex_spacing** = ``1.0`` :ref:`ðŸ”—<class_Terrain3DRegion_property_vertex_spacing>`

.. rst-class:: classref-property-setget

- |void| **set_vertex_spacing**\ (\ value\: ``float``\ )
- ``float`` **get_vertex_spacing**\ (\ )

Stored instancer transforms are laterally scaled by this value. This value is manage by the instancer on loading or when :ref:`Terrain3D.vertex_spacing<class_Terrain3D_property_vertex_spacing>` is set, and shouldn't be manually adjusted.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_Terrain3DRegion_method_calc_height_range:

.. rst-class:: classref-method

|void| **calc_height_range**\ (\ ) :ref:`ðŸ”—<class_Terrain3DRegion_method_calc_height_range>`

Recalculates the height range for this region by looking at every pixel in the heightmap.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_method_duplicate:

.. rst-class:: classref-method

:ref:`Terrain3DRegion<class_Terrain3DRegion>` **duplicate**\ (\ deep\: ``bool`` = false\ ) :ref:`ðŸ”—<class_Terrain3DRegion_method_duplicate>`

Returns a duplicate copy of this node, with references to the same image maps and multimeshes.

- deep - Also make complete duplicates of the maps and multimeshes.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_method_get_data:

.. rst-class:: classref-method

``Dictionary`` **get_data**\ (\ ) |const| :ref:`ðŸ”—<class_Terrain3DRegion_method_get_data>`

Returns all data in this region in a dictionary.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_method_get_map:

.. rst-class:: classref-method

``Image`` **get_map**\ (\ map_type\: :ref:`MapType<enum_Terrain3DRegion_MapType>`\ ) |const| :ref:`ðŸ”—<class_Terrain3DRegion_method_get_map>`

Returns the specified image map.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_method_get_maps:

.. rst-class:: classref-method

:ref:`Array<class_Array>`\[``Image``\] **get_maps**\ (\ ) |const| :ref:`ðŸ”—<class_Terrain3DRegion_method_get_maps>`

Returns an Array\ ``Image`` with height, control, and color maps.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_method_sanitize_map:

.. rst-class:: classref-method

``Image`` **sanitize_map**\ (\ map_type\: :ref:`MapType<enum_Terrain3DRegion_MapType>`, map\: ``Image``\ ) |const| :ref:`ðŸ”—<class_Terrain3DRegion_method_sanitize_map>`

Validates and adjusts the map size and format if possible, or creates a usable blank image in the right size and format.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_method_sanitize_maps:

.. rst-class:: classref-method

|void| **sanitize_maps**\ (\ ) :ref:`ðŸ”—<class_Terrain3DRegion_method_sanitize_maps>`

Sanitizes all map types. See :ref:`sanitize_map<class_Terrain3DRegion_method_sanitize_map>`.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_method_save:

.. rst-class:: classref-method

Error **save**\ (\ path\: ``String`` = "", 16-bit\: ``bool`` = false\ ) :ref:`ðŸ”—<class_Terrain3DRegion_method_save>`

Saves this region to the current file name.

- path - specifies a directory and file name to use from now on.

- 16-bit - save this region with 16-bit height map instead of 32-bit. This process is lossy.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_method_set_data:

.. rst-class:: classref-method

|void| **set_data**\ (\ data\: ``Dictionary``\ ) :ref:`ðŸ”—<class_Terrain3DRegion_method_set_data>`

Overwrites all local variables with values in the dictionary.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_method_set_map:

.. rst-class:: classref-method

|void| **set_map**\ (\ map_type\: :ref:`MapType<enum_Terrain3DRegion_MapType>`, map\: ``Image``\ ) :ref:`ðŸ”—<class_Terrain3DRegion_method_set_map>`

Assigns the provided map to the desired map type.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_method_set_maps:

.. rst-class:: classref-method

|void| **set_maps**\ (\ maps\: :ref:`Array<class_Array>`\[``Image``\]\ ) :ref:`ðŸ”—<class_Terrain3DRegion_method_set_maps>`

Expects an array with three images in it, and assigns them to the height, control, and color maps.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_method_update_height:

.. rst-class:: classref-method

|void| **update_height**\ (\ height\: ``float``\ ) :ref:`ðŸ”—<class_Terrain3DRegion_method_update_height>`

When sculpting, this is called to provide the current height. It may expand the vertical bounds, which is used to calculate the terrain AABB.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_method_update_heights:

.. rst-class:: classref-method

|void| **update_heights**\ (\ low_high\: ``Vector2``\ ) :ref:`ðŸ”—<class_Terrain3DRegion_method_update_heights>`

When sculpting the terrain, this is called to provide both a low and high height. It may expand the vertical bounds, which is used to calculate the terrain AABB.

.. rst-class:: classref-item-separator

----

.. _class_Terrain3DRegion_method_validate_map_size:

.. rst-class:: classref-method

``bool`` **validate_map_size**\ (\ map\: ``Image``\ ) |const| :ref:`ðŸ”—<class_Terrain3DRegion_method_validate_map_size>`

This validates the map size according to previously loaded maps.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
